// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backlog.proto

package omnuts_api_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Backlog_BacklogType int32

const (
	Backlog_PRODUCT Backlog_BacklogType = 0
	Backlog_SPRINT  Backlog_BacklogType = 1
)

var Backlog_BacklogType_name = map[int32]string{
	0: "PRODUCT",
	1: "SPRINT",
}

var Backlog_BacklogType_value = map[string]int32{
	"PRODUCT": 0,
	"SPRINT":  1,
}

func (x Backlog_BacklogType) String() string {
	return proto.EnumName(Backlog_BacklogType_name, int32(x))
}

func (Backlog_BacklogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{0, 0}
}

type Backlog_Status int32

const (
	Backlog_NOT_STARTED Backlog_Status = 0
	Backlog_IN_PROGRESS Backlog_Status = 1
	Backlog_COMPLETED   Backlog_Status = 2
)

var Backlog_Status_name = map[int32]string{
	0: "NOT_STARTED",
	1: "IN_PROGRESS",
	2: "COMPLETED",
}

var Backlog_Status_value = map[string]int32{
	"NOT_STARTED": 0,
	"IN_PROGRESS": 1,
	"COMPLETED":   2,
}

func (x Backlog_Status) String() string {
	return proto.EnumName(Backlog_Status_name, int32(x))
}

func (Backlog_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{0, 1}
}

type Backlog struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                 Backlog_BacklogType  `protobuf:"varint,3,opt,name=type,proto3,enum=omnuts.api.v1.Backlog_BacklogType" json:"type,omitempty"`
	Status               Backlog_Status       `protobuf:"varint,4,opt,name=status,proto3,enum=omnuts.api.v1.Backlog_Status" json:"status,omitempty"`
	Vote                 int32                `protobuf:"varint,5,opt,name=vote,proto3" json:"vote,omitempty"`
	CreatedOn            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	UpdatedOn            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_on,json=updatedOn,proto3" json:"updated_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Backlog) Reset()         { *m = Backlog{} }
func (m *Backlog) String() string { return proto.CompactTextString(m) }
func (*Backlog) ProtoMessage()    {}
func (*Backlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{0}
}

func (m *Backlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Backlog.Unmarshal(m, b)
}
func (m *Backlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Backlog.Marshal(b, m, deterministic)
}
func (m *Backlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backlog.Merge(m, src)
}
func (m *Backlog) XXX_Size() int {
	return xxx_messageInfo_Backlog.Size(m)
}
func (m *Backlog) XXX_DiscardUnknown() {
	xxx_messageInfo_Backlog.DiscardUnknown(m)
}

var xxx_messageInfo_Backlog proto.InternalMessageInfo

func (m *Backlog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Backlog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Backlog) GetType() Backlog_BacklogType {
	if m != nil {
		return m.Type
	}
	return Backlog_PRODUCT
}

func (m *Backlog) GetStatus() Backlog_Status {
	if m != nil {
		return m.Status
	}
	return Backlog_NOT_STARTED
}

func (m *Backlog) GetVote() int32 {
	if m != nil {
		return m.Vote
	}
	return 0
}

func (m *Backlog) GetCreatedOn() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Backlog) GetUpdatedOn() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

type ListBacklogsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBacklogsRequest) Reset()         { *m = ListBacklogsRequest{} }
func (m *ListBacklogsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBacklogsRequest) ProtoMessage()    {}
func (*ListBacklogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{1}
}

func (m *ListBacklogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBacklogsRequest.Unmarshal(m, b)
}
func (m *ListBacklogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBacklogsRequest.Marshal(b, m, deterministic)
}
func (m *ListBacklogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBacklogsRequest.Merge(m, src)
}
func (m *ListBacklogsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBacklogsRequest.Size(m)
}
func (m *ListBacklogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBacklogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBacklogsRequest proto.InternalMessageInfo

type ListBacklogsResponse struct {
	Backlogs             []*Backlog `protobuf:"bytes,1,rep,name=backlogs,proto3" json:"backlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListBacklogsResponse) Reset()         { *m = ListBacklogsResponse{} }
func (m *ListBacklogsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBacklogsResponse) ProtoMessage()    {}
func (*ListBacklogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{2}
}

func (m *ListBacklogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBacklogsResponse.Unmarshal(m, b)
}
func (m *ListBacklogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBacklogsResponse.Marshal(b, m, deterministic)
}
func (m *ListBacklogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBacklogsResponse.Merge(m, src)
}
func (m *ListBacklogsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBacklogsResponse.Size(m)
}
func (m *ListBacklogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBacklogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBacklogsResponse proto.InternalMessageInfo

func (m *ListBacklogsResponse) GetBacklogs() []*Backlog {
	if m != nil {
		return m.Backlogs
	}
	return nil
}

type GetBacklogRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBacklogRequest) Reset()         { *m = GetBacklogRequest{} }
func (m *GetBacklogRequest) String() string { return proto.CompactTextString(m) }
func (*GetBacklogRequest) ProtoMessage()    {}
func (*GetBacklogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8fdbb99dcfe2cc1, []int{3}
}

func (m *GetBacklogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBacklogRequest.Unmarshal(m, b)
}
func (m *GetBacklogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBacklogRequest.Marshal(b, m, deterministic)
}
func (m *GetBacklogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBacklogRequest.Merge(m, src)
}
func (m *GetBacklogRequest) XXX_Size() int {
	return xxx_messageInfo_GetBacklogRequest.Size(m)
}
func (m *GetBacklogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBacklogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBacklogRequest proto.InternalMessageInfo

func (m *GetBacklogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("omnuts.api.v1.Backlog_BacklogType", Backlog_BacklogType_name, Backlog_BacklogType_value)
	proto.RegisterEnum("omnuts.api.v1.Backlog_Status", Backlog_Status_name, Backlog_Status_value)
	proto.RegisterType((*Backlog)(nil), "omnuts.api.v1.Backlog")
	proto.RegisterType((*ListBacklogsRequest)(nil), "omnuts.api.v1.ListBacklogsRequest")
	proto.RegisterType((*ListBacklogsResponse)(nil), "omnuts.api.v1.ListBacklogsResponse")
	proto.RegisterType((*GetBacklogRequest)(nil), "omnuts.api.v1.GetBacklogRequest")
}

func init() { proto.RegisterFile("backlog.proto", fileDescriptor_a8fdbb99dcfe2cc1) }

var fileDescriptor_a8fdbb99dcfe2cc1 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x6b, 0x27, 0x71, 0xc8, 0x58, 0x09, 0x66, 0x68, 0xc1, 0xb2, 0xa8, 0xb0, 0x5c, 0x09,
	0xf9, 0x64, 0xab, 0x46, 0x20, 0xf5, 0x08, 0x6d, 0x14, 0x15, 0x95, 0x38, 0x5a, 0x9b, 0x2b, 0x91,
	0x13, 0x2f, 0xd1, 0x8a, 0xc4, 0x6b, 0xb2, 0xeb, 0x48, 0x15, 0xe2, 0xc2, 0x95, 0x23, 0x1f, 0x8d,
	0x23, 0x57, 0x3e, 0x08, 0x8a, 0xff, 0x20, 0x1a, 0x1a, 0x7a, 0xb2, 0x77, 0xf6, 0x37, 0x6f, 0xdf,
	0xdb, 0x59, 0xe8, 0xcf, 0x92, 0xf9, 0xc7, 0x25, 0x5f, 0x78, 0xf9, 0x9a, 0x4b, 0x8e, 0x7d, 0xbe,
	0xca, 0x0a, 0x29, 0xbc, 0x24, 0x67, 0xde, 0xe6, 0xd4, 0x7a, 0xb2, 0xe0, 0x7c, 0xb1, 0xa4, 0x7e,
	0x92, 0x33, 0x3f, 0xc9, 0x32, 0x2e, 0x13, 0xc9, 0x78, 0x26, 0x2a, 0xd8, 0x7a, 0x5a, 0xef, 0x96,
	0xab, 0x59, 0xf1, 0xc1, 0x97, 0x6c, 0x45, 0x85, 0x4c, 0x56, 0x79, 0x05, 0x38, 0xdf, 0x5a, 0xd0,
	0x7d, 0x5d, 0xe9, 0xe3, 0x00, 0x54, 0x96, 0x9a, 0x8a, 0xad, 0xb8, 0x3d, 0xa2, 0xb2, 0x14, 0x0f,
	0xa1, 0x23, 0x99, 0x5c, 0x52, 0x53, 0x2d, 0x4b, 0xd5, 0x02, 0x5f, 0x42, 0x5b, 0x5e, 0xe7, 0xd4,
	0x6c, 0xd9, 0x8a, 0x3b, 0x08, 0x1c, 0xef, 0x86, 0x1d, 0xaf, 0xd6, 0x6a, 0xbe, 0xf1, 0x75, 0x4e,
	0x49, 0xc9, 0xe3, 0x0b, 0xd0, 0x84, 0x4c, 0x64, 0x21, 0xcc, 0x76, 0xd9, 0x79, 0xbc, 0xa7, 0x33,
	0x2a, 0x21, 0x52, 0xc3, 0x88, 0xd0, 0xde, 0x70, 0x49, 0xcd, 0x8e, 0xad, 0xb8, 0x1d, 0x52, 0xfe,
	0xe3, 0x19, 0xc0, 0x7c, 0x4d, 0x13, 0x49, 0xd3, 0x29, 0xcf, 0x4c, 0xcd, 0x56, 0x5c, 0x3d, 0xb0,
	0xbc, 0x2a, 0xaa, 0xd7, 0x44, 0xf5, 0xe2, 0x26, 0x2a, 0xe9, 0xd5, 0x74, 0x98, 0x6d, 0x5b, 0x8b,
	0x3c, 0x6d, 0x5a, 0xbb, 0x77, 0xb7, 0xd6, 0x74, 0x98, 0x39, 0xcf, 0x40, 0xff, 0x2b, 0x15, 0xea,
	0xd0, 0x9d, 0x90, 0xf0, 0xe2, 0xdd, 0x79, 0x6c, 0x1c, 0x20, 0x80, 0x16, 0x4d, 0xc8, 0xe5, 0x38,
	0x36, 0x14, 0xe7, 0x0c, 0xb4, 0x2a, 0x03, 0xde, 0x07, 0x7d, 0x1c, 0xc6, 0xd3, 0x28, 0x7e, 0x45,
	0xe2, 0xe1, 0x85, 0x71, 0xb0, 0x2d, 0x5c, 0x8e, 0xa7, 0x13, 0x12, 0x8e, 0xc8, 0x30, 0x8a, 0x0c,
	0x05, 0xfb, 0xd0, 0x3b, 0x0f, 0xdf, 0x4e, 0xae, 0x86, 0xdb, 0x7d, 0xd5, 0x39, 0x82, 0x87, 0x57,
	0x4c, 0xc8, 0xfa, 0x18, 0x41, 0xe8, 0xa7, 0x82, 0x0a, 0xe9, 0xbc, 0x81, 0xc3, 0x9b, 0x65, 0x91,
	0xf3, 0x4c, 0x50, 0x0c, 0xe0, 0x5e, 0xfd, 0x36, 0x84, 0xa9, 0xd8, 0x2d, 0x57, 0x0f, 0x1e, 0xdd,
	0x7e, 0xa9, 0xe4, 0x0f, 0xe7, 0x9c, 0xc0, 0x83, 0x11, 0x6d, 0xa4, 0xea, 0x03, 0x76, 0x27, 0x1f,
	0xfc, 0x54, 0x60, 0x50, 0x23, 0x11, 0x5d, 0x6f, 0xd8, 0x9c, 0x22, 0x83, 0xf6, 0xd6, 0x03, 0xee,
	0x0e, 0xfc, 0x16, 0xbf, 0xd6, 0xc9, 0x7f, 0x99, 0xca, 0xbc, 0x63, 0x7e, 0xfd, 0xf1, 0xeb, 0xbb,
	0x8a, 0x68, 0x94, 0x4f, 0x77, 0x73, 0xea, 0x37, 0x16, 0xf1, 0x3d, 0xb4, 0x46, 0x54, 0xa2, 0xbd,
	0xa3, 0xf2, 0x8f, 0x6d, 0x6b, 0x4f, 0x5a, 0xe7, 0xb8, 0x94, 0x7e, 0x8c, 0x47, 0xbb, 0xd2, 0xfe,
	0x67, 0x96, 0x7e, 0x99, 0x69, 0xe5, 0x9c, 0x9f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x23, 0x1d,
	0xc0, 0x42, 0x59, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BacklogServiceClient is the client API for BacklogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BacklogServiceClient interface {
	List(ctx context.Context, in *ListBacklogsRequest, opts ...grpc.CallOption) (*ListBacklogsResponse, error)
	Get(ctx context.Context, in *GetBacklogRequest, opts ...grpc.CallOption) (*Backlog, error)
}

type backlogServiceClient struct {
	cc *grpc.ClientConn
}

func NewBacklogServiceClient(cc *grpc.ClientConn) BacklogServiceClient {
	return &backlogServiceClient{cc}
}

func (c *backlogServiceClient) List(ctx context.Context, in *ListBacklogsRequest, opts ...grpc.CallOption) (*ListBacklogsResponse, error) {
	out := new(ListBacklogsResponse)
	err := c.cc.Invoke(ctx, "/omnuts.api.v1.BacklogService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backlogServiceClient) Get(ctx context.Context, in *GetBacklogRequest, opts ...grpc.CallOption) (*Backlog, error) {
	out := new(Backlog)
	err := c.cc.Invoke(ctx, "/omnuts.api.v1.BacklogService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BacklogServiceServer is the server API for BacklogService service.
type BacklogServiceServer interface {
	List(context.Context, *ListBacklogsRequest) (*ListBacklogsResponse, error)
	Get(context.Context, *GetBacklogRequest) (*Backlog, error)
}

func RegisterBacklogServiceServer(s *grpc.Server, srv BacklogServiceServer) {
	s.RegisterService(&_BacklogService_serviceDesc, srv)
}

func _BacklogService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBacklogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacklogServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/omnuts.api.v1.BacklogService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacklogServiceServer).List(ctx, req.(*ListBacklogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BacklogService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBacklogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacklogServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/omnuts.api.v1.BacklogService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacklogServiceServer).Get(ctx, req.(*GetBacklogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BacklogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "omnuts.api.v1.BacklogService",
	HandlerType: (*BacklogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _BacklogService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _BacklogService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backlog.proto",
}
